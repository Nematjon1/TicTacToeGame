{"version":3,"sources":["components/Square/Square.js","components/Board/Board.js","containers/Game/Game.js","index.js"],"names":["Square","_ref","onClick","value","react_default","a","createElement","className","Board","squares","renderSquare","i","components_Square_Square","Game","state","history","Array","fill","stepNumber","xIsNext","jumpTo","step","_this","setState","this","slice","length","calculateWinner","concat","status","_this2","current","winner","moves","map","move","desc","key","console","log","Fragment","components_Board_Board","handleClick","Component","lines","_lines$i","Object","slicedToArray","b","c","ReactDom","render","containers_Game_Game","document","getElementById"],"mappings":"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","file":"static/js/main.f1a116c2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Square = ({onClick, value}) => {\n    \n  return (\n    <button \n      className=\"square\"\n      onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nexport default Square;\n","import React from \"react\";\n\nimport Square from \"../Square/Square\";\n\nconst Board = ({onClick, squares}) => {\n  \n  const renderSquare = (i) => {\n    return <Square\n      onClick={() => onClick(i)}\n      value={squares[i]} />\n  }\n\n  return (\n    <div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import React, {Component} from \"react\";\n\nimport Board from \"../../components/Board/Board\";\n\nclass Game extends Component {\n  state = {\n    history: [{\n      squares: Array(9).fill(null)\n    }],\n    stepNumber: 0,\n    xIsNext: true\n  };\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if(calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo = (step) => {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n  \n  render() {\n\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n\n      return (\n        <li\n          key={move}\n          className=\"history-list\">\n          <button\n            className=\"history-btn\"\n            onClick={() => this.jumpTo(move)}>\n            {desc}\n          </button>\n        </li>\n      );\n    });\n    let status;\n\n    if(winner) {\n      status = \"Winner: \" + winner;\n      console.log(winner);\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return (\n      <>\n        <h2 className=\"game-title\">Tic Tac Toe</h2>\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)} />\n          </div>\n          <div className=\"game-info\">\n            <div className=\"status\">{status}</div>\n            <ol className=\"history-info\">{moves}</ol>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6]\n  ];\n\n  for(let i = 0; i < lines.length; i++) {\n    const [a,b,c] = lines[i];\n\n    if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\nexport default Game;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport \"./index.css\";\nimport Game from \"./containers/Game/Game\";\n\n// =================\nReactDom.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}